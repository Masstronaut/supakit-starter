{
	// Place your supakit-starter workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	// snippet for creating a component storybook story using svelte CSF
	"New svelte component story": {
		"scope": "svelte",
		"prefix": "story",
		"body": [
			"<script lang=\"ts\">",
			"import { Meta, Story, Template } from '@storybook/addon-svelte-csf';",
			"import { ${1:Component} } from './${1:Component}.svelte';",
			"</script>",
			"",
			"<Meta title=\"Components/${1:Component}\" component={${1:Component}}",
			"\tparameters={{ layout: 'centered' }}",
			"\targTypes={{",
			"\t\t${2:prop}: {",
			"\t\t\tcontrol: {",
			"\t\t\t\ttype: '${3:controlType}'",
			"\t\t\t}",
			"\t\toptions: [\"${4:option}\"]",
			"\t\t},",
			"\t}} />",
			"/>",
			"",
			"<Template let:args>",
			"\t<${1:Component} {...args}>${5:slotContent}</${1:Component}>",
			"</Template>",
			"",
			"<Story name=\"${6:story}\" args={{ ${2:prop}: '${4:option}' }} />",
			"",
			"<Story name=\"Example\" let:args>",
			"\t<${1:Component} {...args}>${5:slotContent}</${1:Component}>",
			"</Story>"
		]
	}
}
